{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to MkDocs","text":"<p>For full documentation visit mkdocs.org.</p>"},{"location":"#commands","title":"Commands","text":"<ul> <li><code>mkdocs new [dir-name]</code> - Create a new project.</li> <li><code>mkdocs serve</code> - Start the live-reloading docs server.</li> <li><code>mkdocs build</code> - Build the documentation site.</li> <li><code>mkdocs help</code> - Print this help message.</li> </ul>"},{"location":"#project-layout","title":"Project layout","text":"<pre><code>mkdocs.yml    # The configuration file.\ndocs/\n    index.md  # The documentation homepage.\n    ...       # Other markdown pages, images and other files.\n</code></pre>"},{"location":"bash_help/","title":"Bash Help","text":""},{"location":"bash_help/#set-switches","title":"<code>set</code> switches","text":"<pre><code>-b soubor               Existuje a je to blokov\u00fd speci\u00e1ln\u00ed soubor.\n-c soubor               Existuje a je to znakov\u00fd speci\u00e1ln\u00ed soubor.\n-d soubor               Existuje a je to adres\u00e1\u0159.\n-e soubor               Existuje.\n-f soubor               Existuje a je to norm\u00e1ln\u00ed soubor.\n-g soubor               Existuje a m\u00e1 pr\u00e1vo set-group-id.\n-k soubor               Existuje a m\u00e1 nastaven\u00fd sticky bit.\n-L soubor               Existuje a je to symbolick\u00fd odkaz.\n-p soubor               Existuje a je to pojmenovan\u00e1 roura (FIFO).\n-r soubor               Existuje a je \u010diteln\u00fd.\n-s soubor               Existuje a m\u00e1 d\u00e9lku v\u011bt\u0161\u00ed ne\u017e nula.\n-S soubor               Existuje a je to soket.\n-u soubor               Existuje a m\u00e1 nastaven set-user-id bit.\n-w soubor               Existuje a je zapisovateln\u00fd.\n-x soubor               Existuje a je provediteln\u00fd.\n-O soubor               Existuje a je vlastn\u011bn\u00fd efektivn\u00edm user id.\n-G soubor               Existuje a je vlastn\u011bn\u00fd efektivn\u00edm group id.\nsoubor1 -nt soubor2     Pravda, kdy\u017e je soubor1 nov\u011bj\u0161\u00ed ne\u017e soubor2.\nsoubor1 -ot soubor2     Pravda, kdy\u017e je soubor1 star\u0161\u00ed ne\u017e soubor2.\nsoubor1 -ef soubor2     Pravda, kdy\u017e soubor1 a soubor2 maj\u00ed shodn\u00fd inode\n                        na stejn\u00e9m disku.\n-z \u0159et\u011bzec              Pravda, kdy\u017e je \u0159et\u011bzec pr\u00e1zdn\u00fd.\n-n \u0159et\u011bzec              Pravda, kdy\u017e je d\u00e9lka \u0159et\u011bzce nenulov\u00e1.\n\u0159et\u011bzec1 = \u0159et\u011bzec2     Pravda, kdy\u017e \u0159et\u011bzce jsou stejn\u00e9.\n\u0159et\u011bzec1 != \u0159et\u011bzec2    Pravda, kdy\u017e \u0159et\u011bzce nejsou stejn\u00e9.\n! v\u00fdraz                 Pravda, kdy\u017e v\u00fdraz je nepravdiv\u00fd.\nv\u00fdraz1 -a v\u00fdraz2        Pravda, kdy\u017e jak v\u00fdraz1 tak v\u00fdraz2 jsou pravdiv\u00e9.\nv\u00fdraz1 -o v\u00fdraz2        Pravda, kdy\u017e je aspo\u0148 jeden z v\u00fdraz\u016f v\u00fdraz1 nebo v\u00fdraz2 pravdiv\u00fd.\n</code></pre>"},{"location":"linux-commands/","title":"Linux commands","text":"<p>This document contains mainly brain dumps created at the moment I struggled to find the right command or set of commands to perform the desired action. Description is mainly in in Czech language, however the goal is to rewrite it to English.</p>"},{"location":"linux-commands/#yumdnf-rpm","title":"YUM/DNF, RPM","text":"<p>Downgrades the specified packages to the highest of all known lower versions if possible. When version is given and is lower than version of installed package then it downgrades to target version</p> <pre><code>yum distribution-synchronization\n</code></pre> <p>Zobrazeni dostupnych repozitaru, repozitare zobrazeni</p> <pre><code>yum repolist all\n</code></pre> <p>Ktery balik nabizi prikaz gcc</p> <pre><code>dnf provides '*/gcc'\n</code></pre> <p>Downgradovat na starsi verze balicku</p> <pre><code>dnf downgrade jmock-1.2.0\n</code></pre> <p>Hledani nainstalovaneho baliku</p> <pre><code>rpm -q jmock\n</code></pre> <p>zobrazi starsi verze balicku, package old version</p> <pre><code>dnf list jmock --showduplicates\n</code></pre> <p>Zapnout repozitar aktivovat, enable repository</p> <pre><code>dnf config-manager --set-enabled fedora-debuginfo\n</code></pre> <p>Install missing dependencies for building an RPM package</p> <pre><code>yum-builddep spacewalk-java-2.6.25-1.git.76.aede25c.fc24.src.rpm\n</code></pre> <p>Instalace baliku</p> <pre><code>rpm -ivh http://yum.spacewalkproject.org/nightly/Fedora/23/x86_64/spacewalk-repo-2.5-3.fc23.noarch.rpm\n</code></pre> <p>Instalovat specifickou verzi balicku http://unix.stackexchange.com/questions/151689/how-can-i-instruct-yum-to-install-a-specific-version-of-package-x</p> <pre><code>yum --showduplicates list httpd\nyum install &lt;package name&gt;-&lt;version info&gt; #nekdy pozaduje i verzi\n</code></pre> <p>Porovnani obsahu repozitaru, compare content repository...more in man</p> <pre><code>repoclosure -l beaker-Client -l epel -r spacewalk-client-nightly\n</code></pre> <p>Najit dependence k rpm, find dependencies for specific rpm</p> <pre><code>rpm -qpR checkpolicy-2.0.22-1.el6.x86_64.rpm\n</code></pre> <p>Zobrazit requires</p> <pre><code>rpm -qR python3-hwdata\n</code></pre> <p>Ziskat informace o nenainstalovanem baliku</p> <pre><code>rpm -qip foo.rpm\n</code></pre> <p>Ziskat informace o nenainstalovanem baliku</p> <pre><code>rpm -qi python3-dbus\n</code></pre> <p>Zobrazit seznam nainstalovanych baliku</p> <pre><code>rpm -qa\nyum list installed\n</code></pre> <p>Smazat balik bez dependenci, erase, delete package without dependencies</p> <pre><code>rpm -e --nodeps \"php-sqlite2-5.1.6-200705230937\"\n</code></pre> <p>Zjistit ktery balik vlastni dany soubor, query package owning specified file</p> <pre><code>rpm -qf /sbin/rhnreg_ks\n</code></pre> <p>Ukazat requires pro nenainstalovany balik</p> <pre><code>rpm -qp --requires python3-hwdata-1.10.1-6.fc24.noarch.rpm\nrpm -qpR python3-hwdata-1.10.1-6.fc24.noarch.rpm\n</code></pre> <p>Ukazat requires pro nainstalovany balik</p> <pre><code>rpm -qR &lt;package&gt;\ndnf repoquery --requires vim-enhanced\nyum deplist &lt;package&gt;\n</code></pre> <p>Co dany balik poskytuje</p> <pre><code>repoquery --list rhnlib\n</code></pre> <p>To see which additional RPM packages are needed to satisfy the dependencies</p> <pre><code>repoquery --requires --resolve &lt;package&gt;\n</code></pre> <p>Historie instalaci daneho baliku</p> <pre><code>yum history package-list rhnlib*\n</code></pre> <p>yum log, hledani v logu instalaci</p> <pre><code>cat /var/log/yum.log |grep rhnlib\n</code></pre> <p>Zobrazi dodatecne informace k baliku, additional info about package</p> <pre><code>yumdb info package_name\nyum info package_name\u2026\n</code></pre> <p>Rozbalit rpm bez instalace</p> <pre><code>rpm2cpio checkpolicy-1.33.1-6.el5.x86_64.rpm | cpio -idmv\n</code></pre> <p>Instalace epel repa, installation of epel repository</p> <pre><code>wget https://dl.fedoraproject.org/pub/epel/epel-release-latest-6.noarch.rpm\nrpm -Uvh epel-release-6*.rpm\n</code></pre> <p>Zapnuti repa subscription-manager</p> <pre><code>subscription-manager repos --enable=rhel-$(rpm -E '%{rhel}')-server-optional-rpms\n</code></pre>"},{"location":"linux-commands/#vim","title":"VIM","text":"<p>Hledani v man manpage, manual, search (stisknout \"/\" a psat hledany vyraz) Dalsi vysledek -&gt; stisknout \"n\", predchozi vysledek \"N\"</p> <p>replace, nahrazeni textu <code>:%s/\\&lt;foo\\&gt;/bar/gc</code> - Change only whole words exactly matching 'foo' to 'bar'; ask for confirmation. <code>:%s/foo/bar/g</code> - Find each occurrence of 'foo' (in all lines), and replace it with 'bar'.</p>"},{"location":"linux-commands/#git","title":"GIT","text":"<p>Zobrazeni rozdilu</p> <pre><code>git diff\n</code></pre> <p>Pridani verze v interaktivnim modu</p> <pre><code>git add -i spacecmd/src/lib/kickstart.py\n</code></pre> <p>Rozdily v pripravenem ke commitu</p> <pre><code>git diff --cached #--cached == --staged\n</code></pre> <p>Potvrzeni zmen</p> <pre><code>git commit\n</code></pre> <p>Zmena jmena v global configu</p> <pre><code>git config --global user.name 'Ondrej Gajdusek'\n</code></pre> <p>Modifikovani autora posledniho commitu</p> <pre><code>git commit --amend --author='Ondrej Gajdusek &lt;ogajduse@redhat.com&gt;'\n</code></pre> <p>Modifikovani posledniho commitu - vsech souboru</p> <pre><code>git commit --amend -a\n</code></pre> <p>Ziskani obsahu remote repozitare</p> <pre><code>git pull --rebase\n</code></pre> <p>Pushnuti vetve na github??</p> <pre><code>git push --set-upstream origin setsoftwaredetails\n</code></pre> <p>master==origin, revert posledniho commitu, --hard param. Zpusobi uplnou ztratu commitu/snimku</p> <pre><code>git reset --hard HEAD~1\n</code></pre> <p>Revert posledniho commitu, commit ponecha obsah v casti non staged</p> <pre><code>git reset HEAD~1\n</code></pre> <p>Reset vetve na commit 0d1d</p> <pre><code>git reset --hard 0d1d7fc32\n</code></pre> <p>Situace, kdy je remote branch napred oproti lokalni, provedu hard reset na starsi commit, remote je ted ahead, musim zmenit FETCH_HEAD</p> <pre><code>git reset FETCH_HEAD --hard\n</code></pre> <p>Hledani v gitu, git hledani, git search,</p> <pre><code>git grep kickstart_\n</code></pre> <p>Hledani retezec obsahujici RHN v souborech s priponou .java</p> <pre><code>git grep '*.* RHN' -- '*.java'\n</code></pre> <p>Pushnuti vetve na GitHub, ignoruje konflikty</p> <pre><code>git push --force\n</code></pre> <p>Zobrazi remote repozitare, URL, kterou m\u00e1 Git ulo\u017eenou pro zkr\u00e1cen\u00fd n\u00e1zev, kter\u00fd si p\u0159ejete rozepsat</p> <pre><code>git remote -v\n</code></pre> <p>Cherry pick commitu</p> <pre><code>git cherry-pick\n</code></pre> <p>Vetev neni na stejne urovni jako master, udelej -&gt;</p> <pre><code>git rebase master\n</code></pre> <p>http://stackoverflow.com/questions/52704/how-do-you-discard-unstaged-changes-in-git How do I discard changes in my working copy that are not in the index? For a specific file use:</p> <pre><code>git checkout path/to/file/to/revert\n</code></pre> <p>For all unstaged files use:</p> <pre><code>git checkout -- .\n</code></pre> <p>Make sure to include the period (dot) at the end.</p> <p>Revert specific file, revert one file https://stackoverflow.com/questions/215718/reset-or-revert-a-specific-file-to-a-specific-revision-using-git</p> <pre><code>git checkout c5f567 -- file1/to/restore file2/to/restore\n</code></pre> <p>Delete untracked files, smazani netrackovanych/neverzovanych souboru</p> <pre><code>git clean -n # zobrazi, co se smaze\ngit clean -f # smaze\n</code></pre> <p>Smazani tagu</p> <pre><code>git tag -d spacecmd-2.6.7-1\n</code></pre> <p>Smazani tagu z remote, delete remote tag</p> <pre><code>git push origin :refs/tags/spacecmd-2.6.7-1\n</code></pre> <p>gitk refresh - <code>Shift+F5</code></p> <p>Commit pri kterem se pri editovani souboru vypise nejen status ale i diff</p> <pre><code>git commit -v\n</code></pre> <p>Git do revize automaticky zahrne ka\u017ed\u00fd soubor, kter\u00fd je sledov\u00e1n Zcela tak odpad\u00e1 pot\u0159eba zad\u00e1vat p\u0159\u00edkaz git add</p> <pre><code>git commit -a\n</code></pre> <p>Zobraz\u00ed rozd\u00edly diff proveden\u00e9 v ka\u017ed\u00e9 revizi</p> <pre><code>git log -p\n</code></pre> <p>Zobrazi posledni 2 commity</p> <pre><code>git log -2\n</code></pre> <p>Zobraz\u00ed n\u011bkter\u00e9 stru\u010dn\u00e9 statistiky pro ka\u017edou revizi</p> <pre><code>git log --stat\n</code></pre> <p>Zobrazi logy od nebo do urciteho data</p> <pre><code>git log --until #--since\n</code></pre> <p>Hledani v logu</p> <pre><code>git log --all-match #--author, --grep, --commiter\n</code></pre> <p>Stylovani logu, vypis pouze commit message - https://www.kernel.org/pub/software/scm/git/docs/git-log.html#_pretty_formats</p> <pre><code>git log --pretty=format:\"%s\"\n</code></pre> <p>Odstrani referenci na vzdaleny repozitar</p> <pre><code>git remote rm &lt;n\u00e1zev_repozitare&gt;\n</code></pre> <p>Zobrazeni urcite mnoziny tagu</p> <pre><code>git tag -l 'spacecmd*'\n</code></pre> <p>Pridani anotovane znacky</p> <pre><code>git tag -a v0.1 -m 'alpha verze'\n</code></pre> <p>Dodatecne pridani tagu k existujicimu commitu</p> <pre><code>git tag -a v1.2 9fceb02\n</code></pre> <p>Delete tag from remote, delete remote tag, smazat vzdaleny tag - https://nathanhoad.net/how-to-delete-a-remote-git-tag</p> <pre><code>git tag -d 12345\ngit push origin :refs/tags/12345\n</code></pre> <p>Pushnuti znacky na remote repo</p> <pre><code>git push origin [n\u00e1zev zna\u010dky]\n</code></pre> <p>Pushnuti vsech znacek na remote repo</p> <pre><code>git push origin --tags\n</code></pre> <p>Pridani aliasu pro prikazy git xxx</p> <pre><code>git config --global alias.co checkout\ngit config --global alias.ci commit\n</code></pre> <p>Zobrazi posledni commit/revizi na kazde vetvi</p> <pre><code>git branch -v\n</code></pre> <p>Kter\u00e9 v\u011btve u\u017e byly za\u010dlen\u011bny do v\u011btve, na n\u00ed\u017e se nach\u00e1z\u00edm</p> <pre><code>git branch --merged\n</code></pre> <p>Zobrazit v\u011btve, kter\u00e9 obsahuj\u00ed dosud neza\u010dlen\u011bnou pr\u00e1ci</p> <pre><code>git branch --no-merged\n</code></pre> <p>Prejmenovat vetev If you want to rename a branch while pointed to any branch, do:</p> <pre><code>git branch -m &lt;oldname&gt; &lt;newname&gt;\n</code></pre> <p>If you want to rename the current branch, you can do:</p> <pre><code>git branch -m &lt;newname&gt;\n</code></pre> <p>Smazat vetev na remote repozitari</p> <pre><code>git push origin :the_remote_branch\n</code></pre> <p>Pushnuti zmen, konkretne tagu</p> <pre><code>git push origin :refs/tags/spacewalk-java-2.7.12-1\n</code></pre> <p>Forked repo, forknute repo, jak udrzet updated s upstreamem - https://gist.github.com/CristinaSolana/1885435</p> <p>How to merge two branches in different repositories, local repositories - http://stackoverflow.com/questions/3402599/how-do-you-merge-two-git-branches-that-are-in-different-local-repos-folders</p> <pre><code># switch to repo A\n\ncd folder_a\n\n# Add repo B as a remote repository\ngit remote add folderb /path/to/folder_b\n\n# Pull B's master branch into a local branch named 'b'\ngit pull folderb master:b\n\n# Merge b into A's master branch\ngit merge b\n\n# Switch to repo B\ncd ../folder_b\n\n# Add repo A as a remote repository\ngit remote add foldera /path/to/folder_a\n\n# Pull the resulting branch into repo B's master branch\ngit pull foldera master:master\n</code></pre> <p>Reference first commit, initial commit, prvni commit</p> <pre><code>git rev-list --max-parents=0 HEAD\n</code></pre> <p>Moving one directory from repoA to repoB with history - http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/</p> <p>Move tag, presunout tag na jiny commit - http://stackoverflow.com/questions/8044583/how-can-i-move-a-tag-on-a-git-branch-to-a-different-commit</p> <p>Find all repositories with uncommited changes.</p> <pre><code>locate -r \"\\.git$\" | sed 's/\\.git$//' | grep -v cache | xargs -I _ sh -c \\\n'if [ -n \"$(git -C _ status --porcelain)\" ]; then echo Changes in _ ;fi;'\n</code></pre>"},{"location":"linux-commands/#koji","title":"Koji","text":"<p>regenerace repa</p> <pre><code>koji regen-repo &lt;buid tag&gt;\n</code></pre> <p>Build baliku pro specificky build target</p> <pre><code>koji build spacewalk-nightly-fedora25 git://git@github.com/spacewalkproject/spacewalk.git/#spacewalk-branding-2.7.2-1\n</code></pre>"},{"location":"linux-commands/#beaker","title":"BEAKER","text":"<p>Prodlouzeni casu u beaker masiny</p> <pre><code># posledni cislo je cislo tasku u daneho jobu\nbkr watchdog-extend --by $( expr 3600 \\* 24 \\* 9 ) 43476098\n</code></pre> <p>Extend test time</p> <pre><code>rhts-test-checkin 127.0.0.1:7086 bkrsystemfqdn.com 1400356 \\\ndistribution/reservesys 120h 42970190\n</code></pre>"},{"location":"linux-commands/#sed","title":"SED","text":"<p>Replace text in file sed, replace link sed - http://stackoverflow.com/a/1583282/6239929</p> <p>Strip package version from NEVRA to get only package name</p> <pre><code>sed -e 's/\\([^.]*\\).*/\\1/' -e 's/\\(.*\\)-.*/\\1/'\n</code></pre> <p>Smazani radku se specifickym obsahem, remove line with specific contents - http://stackoverflow.com/questions/5410757/delete-lines-in-a-text-file-that-containing-a-specific-string</p> <p>To remove the line and print the output to standard out:</p> <pre><code>sed '/pattern to match/d' ./infile\n</code></pre> <p>To directly modify the file:</p> <pre><code>sed -i '/pattern to match/d' ./infile\n</code></pre> <p>To directly modify the file (and create a backup):</p> <pre><code>sed -i.bak '/pattern to match/d' ./infile\n</code></pre> <p>For Mac OS X users:</p> <pre><code>sed -i '' '/pattern/d' ./infile\n</code></pre>"},{"location":"linux-commands/#other","title":"Other","text":"<p>Odstraneni slozky i s obsahem It deletes all files and folders contained in the lampp directory.</p> <pre><code>rm -rf lampp\n</code></pre> <p>Zobrazit vypis prikazu , ktere bezi ve scriptu, command script</p> <pre><code>set -i\n</code></pre> <p>Ukonci script skript, kdyz neco failne</p> <pre><code>set -e\n</code></pre> <p>Zmena barvy fontu promptu - http://www.cyberciti.biz/faq/bash-shell-change-the-color-of-my-shell-prompt-under-linux-or-unix/</p> <p>Barvy v bashi - http://misc.flogisoft.com/bash/tip_colors_and_formatting</p> <p>NetworkManager text user interface (TUI)</p> <pre><code>nmtui\n</code></pre> <p>Zobrazi posledni cast souboru. Output the last part of files</p> <pre><code>tail\n</code></pre> <p>Silence user input, heslo password zadani hesla</p> <pre><code>read -s\n</code></pre> <p>Hledani souboru, search file</p> <pre><code>locate\n</code></pre> <p>Updatovani databaze pro prikaz locate, update a database for locate</p> <pre><code>updatedb\n</code></pre> <p>Zjisteni rozdilnosti mezi dvemi soubory</p> <pre><code>diff s1 s2\n</code></pre> <p>Zobrazeni prvniho radku souboru</p> <pre><code>head -1 file\n</code></pre> <p>Zabit proces v cmd - ctrl+D</p> <p>Prenos souboru pres ssh - https://docs.fedoraproject.org/en-US/Fedora/12/html/Deployment_Guide/s2-openssh-using-scp.html</p> <pre><code>scp testscr.sh root@your.awesome.system.com:~/\n</code></pre> <p>Prenos vice souboru z local stanice do remote</p> <pre><code>scp /home/ogajduse/spacewalk/spacecmd/src/lib/{utils,misc,system}.py root@your.awesome.system.com:/usr/lib/python2.6/site-packages/spacecmd/\n</code></pre> <p>Jak zjistit ssh klic Pokud ho mas vygenerovany, tak:</p> <pre><code>$ cat ~/.ssh/id_rsa.pub\n# Pokud ho nemas vygenerovany, tak:\n$ ssh-keygen\n</code></pre> <p>SSH permissions for id_* files - http://stackoverflow.com/questions/9270734/ssh-permissions-are-too-open-error</p> <p>SSH client config file - https://linux.die.net/man/5/ssh_config</p> <p>Zmenit heslo soukromeho klice ssh, change ssh key password - http://www.cyberciti.biz/faq/howto-ssh-changing-passphrase/</p> <p>Which distribution am I using, linux version, release - https://superuser.com/questions/80251/how-to-know-which-linux-distribution-im-using?newreg=c51cdaabc57b48dc86a555101d0f6471</p> <p>Zjisteni verze RHELu, verzi rhel zjistit</p> <pre><code>lsb_release -i -r\n</code></pre> <p>Sekla sessiona ssh</p> <p>enter tilda tecka</p> <p>Kopirovani id na remote</p> <pre><code>ssh-copy-id -i ~/.ssh/id_rsa.pub root@ts.unitedclans.tk\n</code></pre> <p>Zobraz volne misto na disku, free disk space</p> <pre><code>df -h\n</code></pre> <p>Reloadovat bashrc config bez odhlaseni</p> <pre><code>source ~/.bashrc\n</code></pre> <p>Zjistit typ souboru, filetype, file type</p> <pre><code>file ./file\n</code></pre> <p>Konverze timestamp conversion to time</p> <pre><code>date -d @&lt;timestamp&gt;\n</code></pre> <p>Zjistit plnou cestu prikazu (shell), show the full path of (shell) commands</p> <pre><code>which spacewalk-service\ntype -p spacewalk-service\n</code></pre> <p>List block devices, vylistovat blokova zarizeni</p> <pre><code>lsblk\n</code></pre> <p>Package cache cleanup (PackageKit, packagekit cache removal) - https://unix.stackexchange.com/questions/265755/fedora-23-can-i-safely-delete-files-in-var-cache-packagekit-metadata-updates</p> <pre><code>pkcon refresh force -c -1\n</code></pre> <p>Run tar, gzip on all cores, pigz - https://stackoverflow.com/questions/12313242/utilizing-multi-core-for-targzip-bzip-compression-decompression</p> <pre><code>tar -c --use-compress-program=pigz -f tar.file dir_to_zip\n</code></pre> <p>Decompress via pigz</p> <pre><code>pigz -dc target.tar.gz | tar xf -\n</code></pre>"},{"location":"monitoring/graphite/","title":"Graphite TSDB","text":""},{"location":"monitoring/graphite/#clean-up-carbon-metrics","title":"Clean up Carbon metrics","text":"<p>We encountered a full disk and the following articles were more than helpful in resolving it.</p> <p>First we did clean up the whisper database to get at least some space on the disk: https://sysadmin.compxtreme.ro/clean-up-whisper-database/</p> <p>And then we changed the data retention period and used a tooling to apply the new data retention to the existing metrics: https://www.linkedin.com/pulse/how-resize-already-existing-whisper-files-datapoint-panneerselvam</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/","title":"How to migrate activities from Sports Tracker to Strava","text":"<p>One day I came across my old and unused Sports Tracker account in which I still have some activities uploaded. That day I decided to migrate them to Strava as it is the tool that I currently use for tracking my activities. In the next few steps, I will try to guide you through the migration process.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#create-strava-application","title":"Create Strava application","text":"<p>Go to https://www.strava.com/settings/api and create a new API application.</p> <p>Choose a cool name for your application, leave the default value in the category field, put some website in the Website field, even a fake one will do. Into the Authorization Callback Domain put <code>developers.strava.com</code> and create your API application.</p> <p>When you will go to the My API Application page, you should see that a Client ID and Client Secret were generated for you. Also, see the Rate Limits which restrict you from making more requests than it specifies.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#generate-api-token","title":"Generate API token","text":"<p>Next, you need to obtain the authorization token. I studied it a bit and figured out that Strava API provides some APIs that should provide me with the token. However, I come up with a faster solution. Open Strava Swagger API doc and click the Authorize button on the right. Put there client_id and client_secret from My API Application page and in the Scope section select only <code>activity:write</code> and hit Authorize button. You will get redirected to the page where you just confirm that your API application does have the right to upload activities. On this page hit Authorize button. Now you should see available authorization. From the Swagger API doc, choose the <code>GET /athlete Get Authenticated Athlete</code> endpoint, hit Try it out button and hit Execute. In the Responses section you should see a curl command generated with an HTTP header option filled with a token. Something like <code>-H \"authorization: Bearer 268xxxxxc67d820xxxxxxxxxx0b2xxxxxxxxxxe9\"</code> Copy the token to the clipboard.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#download-helper-scripts","title":"Download helper scripts","text":"<p>Next, download the following two files from the gist. https://gist.github.com/ogajduse/6d13b367f92d2af078704b6777d50c09</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#download-activities-from-sports-tracker","title":"Download activities from Sports Tracker","text":"<p>Navigate to https://www.sports-tracker.com/diary/workout-list and keep hitting Show more button on the bottom of the page until you load all your activities on the single page. Open browser console by pressing <code>Ctrl + Shift + I</code>. Copy the contents of the <code>sports-tracker-download.js</code> file from the gist and paste it to the console and hit <code>Enter</code>. Right-click to the console output and save the log to disk. Open the file and remove the script part on the top that you pasted to the console. Now remove all the line prefixes if there are any. I used the following sed command to remove them.</p> <pre><code>sed -i 's/^VM[0-9]*\\:[0-9]*\\s//' www.sports-tracker.com-1645568542000.log\n</code></pre> <p>Now you should have a nice bash script that you can run and create an offline backup of all your Sports Tracker activities. Move the script to the same directory where you have downloaded the files from the gist and run it.</p> <pre><code>bash www.sports-tracker.com-1645568542000.log\n</code></pre> <p>It should create a directory structure in which the GPX files and images are stored. Each directory represents single Sports Tracker activity. You can ZIP this folder and back it up as an offline backup.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#upload-activities-to-strava","title":"Upload activities to Strava","text":"<p>Once you have dowloaded the activities, we have to upload them to Strava. The gist that I created provides an <code>activities-upload.sh</code> helper script for that. It is written in Bash and it requires standard GNU tools, jq, curl and Perl installed on the system. You need to do add a Sports Tracker username to the script as well as the Strava API token as follows.</p> <pre><code>TOKEN=268xxxxxc67d820xxxxxxxxxx0b2xxxxxxxxxxe9 # Strava token\nST_USERNAME=johndoe # Sports Tracker username\n</code></pre> <p>Now we are all set for the upload. Execute the upload script.</p> <pre><code>bash activities-upload.sh\n</code></pre> <p>You should see that it goes through all the activities that ar found in the current directory and it uploads them to Strava. When the script finishes, you should see a summary of what was done. Each time the script runs, there is a new results.json file created with the timestamp when it was executed. For more information see the JSON file contents.</p> <p>If there are any photos to upload to your activities, the script will notify you in the summary section.</p> <pre><code>There are photos that might be uploaded for the following activities:\nhttps://www.strava.com/activities/&lt;your-activity-id&gt;\nUpload the following photos to this activity at https://www.strava.com/activities/&lt;your-activity-id&gt;/edit\n&lt;sports-tracker-activity-id&gt;/&lt;sports-tracker-activity-id&gt;-531348c3e4b0d9b3df012aa3-20.63160584-47.6522775-1393772737188.jpg\n</code></pre>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#conclusion","title":"Conclusion","text":"<p>That's it, we have successfully uploaded activities from Sports Tracker to Strava. You can check the uploaded activities at https://www.strava.com/athlete/training. If you would like to explore the Strava API more, check out https://developers.strava.com/docs/reference/.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#links-that-i-found-along-the-way","title":"Links that I found along the way","text":""},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#tooling","title":"Tooling","text":"<p>stravacli - Command-line client for Strava.</p> <p>strava-uploader - personal project on GitHub that uploads activities from RunKeeper.</p> <p>stravaweblib - Provides all the functionality of the stravalib package and extends it using web scraping.</p>"},{"location":"my_projects/how-to-migrate-from-sports-tracker-to-strava/#other-links","title":"Other links","text":"<p>stackoverflow discussion about the access token generation https://stackoverflow.com/questions/52880434/. Strava developer document describing API authentication. https://developers.strava.com/docs/authentication/.</p>"},{"location":"packaging/getting-repo-packages/","title":"How to get the latest packages from YUM repository","text":"<p>Once I was working on an overengineered automation, I came across a problem of downloading the latest packages from a YUM repository. Of course, users can achieve that by defining the repository in <code>/etc/yum.repos.d</code> and then run <code>yum download the-desired-package</code>. Sure, that is a way to go, but I decided to go the harder way and play with the repository metadata.</p> <p>Every YUM repository has a repodata directory that contains multiple files. Two of them I was interested in were repomd.xml and \\&lt;hash&gt;-primary.xml.gz. The first one - repomd is basically an index of the repodata directory. It contains checksums, location, timestamp, and size of every file in the repomd directory. Then the primary is a list of packages contained in the repository. Every package in the list contains multiple attributes including their name and version. Knowing that we are able to programmatically get the latest package from the repository.</p> <p>The only thing we need to know to be able to do it is a baseurl of the repository. Below is the example that is taken from the Gremlin's documentation. It is a small Bash script that does open the repomd and searches for the name of the primary file. Then it opens the primary file and looks for the exact version of the package.</p> <pre><code>#!/bin/bash\n## Download a Gremlin RPM without using yum\n##\n## requires: curl, xpath, gzip\n##\nVERSION=$(curl https://rpm.gremlin.com/noarch/latest | cut -d- -f1)\n## Or optionally set a specific version\n# VERSION=2.16.3\ncurl -fsSL https://rpm.gremlin.com/noarch/$(\\\ncurl -fsSL https://rpm.gremlin.com/noarch/$(\\\ncurl -fsSL https://rpm.gremlin.com/noarch/repodata/repomd.xml \\\n| xpath -e 'string(/repomd/data[@type=\"primary\"]/location/@href)' 2&gt;/dev/null) \\\n| gunzip \\\n| xpath -e 'string(/metadata/package[version/@ver=\"${VERSION}\" and name=\"gremlin\"][last()]/location/@href)' 2&gt;/dev/null) \\\n-o gremlin-${VERSION}.x86_64.rpm\ncurl -fsSL https://rpm.gremlin.com/noarch/$(\\\ncurl -fsSL https://rpm.gremlin.com/noarch/$(\\\ncurl -fsSL https://rpm.gremlin.com/noarch/repodata/repomd.xml \\\n| xpath -e 'string(/repomd/data[@type=\"primary\"]/location/@href)' 2&gt;/dev/null) \\\n| gunzip \\\n| xpath -e 'string(/metadata/package[version/@ver=\"${VERSION}\" and name=\"gremlind\"][last()]/location/@href)' 2&gt;/dev/null) \\\n-o gremlind-${VERSION}.x86_64.rpm\n</code></pre> <p>However, the aim of my work was to get the latest package programmatically. Luckily, the XPath contains a <code>last()</code> function that returns the last item in the list. Here is how I used it in Ansible.</p> <pre><code>- name: Get the package location from the primary file\nxml:\npath: \"{{ get_primary.dest.split('.')[:-1] | join('.') }}\"\nnamespaces:\nrpm: http://linux.duke.edu/metadata/repo\ncommon: http://linux.duke.edu/metadata/common\ncontent: attribute\nxpath: /common:metadata/common:package[common:arch=\"noarch\"\nand common:name=\"{{ item }}\"][last()]/common:location\nregister: primary_parse\ndelegate_to: 127.0.0.1\nrun_once: true\nloop: \"{{ rh_internal_packages }}\"\n</code></pre> <p>In the end, I get the location of the packages in the repository. If <code>baseurl</code> and <code>location</code> of the package are joined together, you will get the URL from which you can download the desired package.</p> <p>Other sources that helped me to accomplish my work:</p> <p>https://lago.readthedocs.io/en/0.15/_modules/ovirtlago/repoverify.html</p> <p>https://devhints.io/xpath</p>"},{"location":"packaging/rpm-packaging/","title":"RPM packaging, Fedora packaging","text":"<p>Parse/evaluate specfile</p> <pre><code>rpmspec -P python-apypie.spec\n</code></pre> <p>Download sources from specfile</p> <pre><code>spectool --all python-apypie.spec --get-files\n</code></pre> <p>Mock build from srpm</p> <pre><code>mock -r fedora-30-x86_64 rebuild python-apypie-0.2.1-2.fc32.src.rpm\n</code></pre>"},{"location":"packaging/rpm-packaging/#fedora-package-update","title":"Fedora package update","text":"<pre><code>export PKG_NAME=apypie\nexport GH_OWNER=Apipie\nexport NEW_VER=0.3.2\nexport VER_PREFIX=v\n\ncat &lt;&lt; EOF\n# Rawhide\nfedpkg switch-branch rawhide\nfedpkg pull --rebase\nwget https://github.com/$GH_OWNER/$PKG_NAME/archive/$VER_PREFIX$NEW_VER.tar.gz \\\n    -O /tmp/$PKG_NAME-$NEW_VER.tar.gz\nfedpkg new-sources /tmp/$PKG_NAME-$NEW_VER.tar.gz\nrpmdev-bumpspec *.spec --comment \"Update to $PKG_NAME $NEW_VER\" --new $NEW_VER\nfedpkg commit -m \"Update to $PKG_NAME $NEW_VER\"\nfedpkg push\nfedpkg build\n\n# Fedora 34\nfedpkg switch-branch f34\ngit merge rawhide\nfedpkg push\nfedpkg build\nfedpkg update --notes \"Update to $PKG_NAME $NEW_VER\" --bugs &lt;bug-id&gt; \\\n    --request testing --stable-karma 2 --unstable-karma '-2' --type enhancement\nEOF\n</code></pre>"}]}